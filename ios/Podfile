platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'
# Set your Mapbox Downloads Token (make sure it has the correct scopes)
ENV['MAPBOX_DOWNLOADS_TOKEN'] ||= 'sk.eyJ1Ijoicmlja2gybmQiLCJhIjoiY205MGNwd2J6MGY0ajJucHl6bjU2Z3hjeSJ9.A6c-vhIK_yYWkdwg3uw6dA'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Determine Flutter root by reading the Generated.xcconfig file.
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'))
  unless File.exist?(generated_xcode_build_settings_path)
    puts "Generated.xcconfig must exist. Run 'flutter build ios' first."
    exit
  end
  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  abort("FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}.")
end

# Require the Flutter pod helper.
require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper.rb'))

target 'Runner' do
  # Uncomment this line if you want to use dynamic frameworks:
  # use_frameworks!
  
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
end
